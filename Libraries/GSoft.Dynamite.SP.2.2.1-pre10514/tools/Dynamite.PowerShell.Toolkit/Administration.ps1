#
# Module 'Dynamite.PowerShell.Toolkit'
# Generated by: GSoft, Team Dynamite.
# Generated on: 10/24/2013
# > GSoft & Dynamite : http://www.gsoft.com
# > Dynamite Github : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
# > Documentation : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
#

<#
	.SYNOPSIS
		Commandlet to restart the OWSTIMER service

	.DESCRIPTION
		Commandlet to restart the OWSTIMER service of the SharePoint farm

    --------------------------------------------------------------------------------------
    Module 'Dynamite.PowerShell.Toolkit'
    by: GSoft, Team Dynamite.
    > GSoft & Dynamite : http://www.gsoft.com
    > Dynamite Github : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    > Documentation : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    --------------------------------------------------------------------------------------
    
  .LINK
    GSoft, Team Dynamite on Github
    > https://github.com/GSoft-SharePoint
    
    Dynamite PowerShell Toolkit on Github
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    
    Documentation
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    
#>
function Restart-SPTimer
{
    Write-Verbose  " - Restarting OWSTIMER instances on Farm"
    $farm = Get-SPFarm
    $farm.TimerService.Instances | foreach {$_.Stop();$_.Start();}
 
	Get-Process OWSTimer| Stop-Process -Force;
	start-sleep 5
}

<#
	.SYNOPSIS
		Commandlet to force a timer job

	.DESCRIPTION
		Commandlet to force execution of a SharePoint timer job

    --------------------------------------------------------------------------------------
    Module 'Dynamite.PowerShell.Toolkit'
    by: GSoft, Team Dynamite.
    > GSoft & Dynamite : http://www.gsoft.com
    > Dynamite Github : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    > Documentation : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    --------------------------------------------------------------------------------------
    
  .LINK
    GSoft, Team Dynamite on Github
    > https://github.com/GSoft-SharePoint
    
    Dynamite PowerShell Toolkit on Github
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    
    Documentation
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    
#>
function Wait-SPTimerJob()
{ 
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory=$true, Position=0)]
		[string]$Name,
		
		[Parameter(Mandatory=$true, Position=1)]
		$WebApplication
	)
	
    $job = Get-SPTimerJob -WebApplication $WebApplication | ?{ $_.Name -match $Name }
    if ($job -eq $null) 
    {
        Write-Verbose 'Timer job not found for ' $WebApplication.DisplayName
    }
    else
    {
        $JobLastRunTime = $job.LastRunTime

		Start-SPTimerJob $job
		
        Write-Verbose "Waiting to finish job $JobFullName last run on $JobLastRunTime"
        
        while ((Get-SPTimerJob $job.Id).LastRunTime -eq $JobLastRunTime) 
        {
            Start-Sleep -Seconds 2
        }

        Write-Verbose  "Finished waiting for job.."
    }
}

<#
	.SYNOPSIS
		Enables the email recipient override for the specified web application.
		Run this only after a site collection has been created.      
	
	.DESCRIPTION
		When receipient override is Enabled, all emails send with the email helper will only be send to the specified address clearing all original To, CC, and BCC addresses
        and a message will be added to the top of the email body listing the original To, CC, and BCC email addresses.

	.EXAMPLE 
		C:\PS> Enable-DSPEmailRecipientOverride -WebApplication http://HOSTNAME -EmailAddress me@cie.com
    
	.PARAMETER $WebApplication
		The web application this setting will affect.

	.PARAMETER $RecipientOverrideEmailAddress
		The email address emails will be sent to.
#>
function Enable-DSPEmailRecipientOverride
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory=$true, Position=0)]
		[Microsoft.SharePoint.PowerShell.SPWebApplicationPipeBind]$WebApplication,

		[Parameter(Mandatory=$true, Position=1)]
		[string]$EmailAddress
	)

	$emailHelper = Resolve-DSPType GSoft.Dynamite.Email.IEmailHelper
	$emailHelper.EnableRecipientOverride($WebApplication.Read(), $EmailAddress)
}

<#
	.SYNOPSIS
		Disables the email recipient override for the specified web application.
		Run this only after a site collection has been created.        
	
	.DESCRIPTION
		When recipient override is Enabled, all emails send with this helper will only be send to the specified address clearing all original To, CC, and BCC addresses
        and a message will be added to the top of the email body listing the original To, CC, and BCC email addresses.

	.EXAMPLE 
		C:\PS> Disable-DSPEmailRecipientOverride -WebApplication http://HOSTNAME
    
	.PARAMETER $WebApplication
		The web application this setting will affect.
#>
function Disable-DSPEmailRecipientOverride
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory=$true, Position=0)]
		[Microsoft.SharePoint.PowerShell.SPWebApplicationPipeBind]$WebApplication
	)

	$emailHelper = Resolve-DSPType GSoft.Dynamite.Email.IEmailHelper
	$emailHelper.EnableRecipientOverride($WebApplication.Read(), "")
}