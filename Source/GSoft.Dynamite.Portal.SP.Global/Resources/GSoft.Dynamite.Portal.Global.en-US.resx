<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Columns_Group" xml:space="preserve">
    <value>Portal Columns</value>
  </data>
  <data name="ContentTypes_Group" xml:space="preserve">
    <value />
  </data>
  <data name="ContentType_BrowsableItem_Description" xml:space="preserve">
    <value>Creates a new Browsable Item</value>
  </data>
  <data name="ContentType_BrowsableItem_Name" xml:space="preserve">
    <value>Browsable Item</value>
  </data>
  <data name="ContentType_ContentItem_Description" xml:space="preserve">
    <value>An item content type for publishing static page content.</value>
  </data>
  <data name="ContentType_ContentItem_Name" xml:space="preserve">
    <value>Static Content Item</value>
  </data>
  <data name="ContentType_FeaturedItem_Description" xml:space="preserve">
    <value>Creates a new item available for the navigation menu and featured in widget</value>
  </data>
  <data name="ContentType_FeaturedItem_Name" xml:space="preserve">
    <value>Navigation and Featured Content Item</value>
  </data>
  <data name="ContentType_NewsItem_Description" xml:space="preserve">
    <value>An item content type for publishing news articles.</value>
  </data>
  <data name="ContentType_NewsItem_Name" xml:space="preserve">
    <value>News Item</value>
  </data>
  <data name="ContentType_SchedulableItem_Description" xml:space="preserve">
    <value>Creates a new Schedulable Item</value>
  </data>
  <data name="ContentType_SchedulableItem_Name" xml:space="preserve">
    <value>Schedulable Item</value>
  </data>
  <data name="ContentType_TranslatableItem_Description" xml:space="preserve">
    <value>A translatable item</value>
  </data>
  <data name="ContentType_TranslatableItem_Name" xml:space="preserve">
    <value>Translatable Item</value>
  </data>
  <data name="Field_ContentAssociationKey_Description" xml:space="preserve">
    <value>Unique identifier which associates content items from different languages.</value>
  </data>
  <data name="Field_ContentAssociationKey_Name" xml:space="preserve">
    <value>Content Association Key</value>
  </data>
  <data name="Field_IsNavMenuItem_Description" xml:space="preserve">
    <value>Specify if this item must appear in the intranet menu</value>
  </data>
  <data name="Field_IsNavMenuItem_Name" xml:space="preserve">
    <value>Navigation menu item</value>
  </data>
  <data name="Field_ItemLanguage_Description" xml:space="preserve">
    <value>Item language set by it's parent variation label.  The language value is locale agnostic.</value>
  </data>
  <data name="Field_ItemLanguage_Name" xml:space="preserve">
    <value>Item Language</value>
  </data>
  <data name="Field_PortalDateSlug_Description" xml:space="preserve">
    <value>Text that is created from the publication date which creates a human readable URL.</value>
  </data>
  <data name="Field_PortalDateSlug_Name" xml:space="preserve">
    <value>Friendly URL Date Slug</value>
  </data>
  <data name="Field_PortalNavigation_Description" xml:space="preserve">
    <value>Defines where the item will be in the site navigation.</value>
  </data>
  <data name="Field_PortalNavigation_Name" xml:space="preserve">
    <value>Navigation</value>
  </data>
  <data name="Field_PortalSlug_Description" xml:space="preserve">
    <value>Text that is created from the title which creates a human readable URL.</value>
  </data>
  <data name="Field_PortalSlug_Name" xml:space="preserve">
    <value>Friendly URL Slug</value>
  </data>
  <data name="Field_PortalSubject_Description" xml:space="preserve">
    <value>Specifies matters relating to the content</value>
  </data>
  <data name="Field_PortalSubject_Name" xml:space="preserve">
    <value>Topics related</value>
  </data>
  <data name="Field_PortalSummary_Description" xml:space="preserve">
    <value>Summary of the page content.</value>
  </data>
  <data name="Field_PortalSummary_Name" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="Field_SchedulingEndDate_Description" xml:space="preserve">
    <value>Specifies the content publishing end date</value>
  </data>
  <data name="Field_SchedulingEndDate_Name" xml:space="preserve">
    <value>Publishing Scheduling End Date</value>
  </data>
  <data name="Field_SchedulingStartDate_Description" xml:space="preserve">
    <value>Specifies the content publishing start date</value>
  </data>
  <data name="Field_SchedulingStartDate_Name" xml:space="preserve">
    <value>Publishing Scheduling Start Date</value>
  </data>
  <data name="ContentType_ContentPage_Desc" xml:space="preserve">
    <value>Page content (inherits from the translatable page content type).</value>
  </data>
  <data name="ContentType_ContentPage_Name" xml:space="preserve">
    <value>Page Content</value>
  </data>
  <data name="ContentType_NewsPage_Description" xml:space="preserve">
    <value>A page content type for publishing news articles.</value>
  </data>
  <data name="ContentType_NewsPage_Name" xml:space="preserve">
    <value>News Page</value>
  </data>
  <data name="ContentType_TranslatablePage_Description" xml:space="preserve">
    <value>A translatable page</value>
  </data>
  <data name="ContentType_TranslatablePage_Name" xml:space="preserve">
    <value>Translatable Page</value>
  </data>
  <data name="Field_IsTopNews_Description" xml:space="preserve">
    <value>Checked is the item is present it the Top News</value>
  </data>
  <data name="Field_IsTopNews_Name" xml:space="preserve">
    <value>Is in Top News</value>
  </data>
  <data name="Field_TopNewsOrder_Description" xml:space="preserve">
    <value>The order of the item in the Top News</value>
  </data>
  <data name="Field_TopNewsOrder_Name" xml:space="preserve">
    <value>Top News order</value>
  </data>
  <data name="PageLayout_CatalogCategory_Description" xml:space="preserve">
    <value>Page layout for catalog grouped items</value>
  </data>
  <data name="PageLayout_CatalogCategory_Title" xml:space="preserve">
    <value>Aggregator Page Layout</value>
  </data>
  <data name="PageLayout_CatalogItem_Description" xml:space="preserve">
    <value>Page layout for catalog items</value>
  </data>
  <data name="PageLayout_CatalogItem_Title" xml:space="preserve">
    <value>Item Page Layout</value>
  </data>
  <data name="ContentType_NodeDescriptionItem_Description" xml:space="preserve">
    <value>An item content type for describing nodes.</value>
  </data>
  <data name="ContentType_NodeDescriptionItem_Name" xml:space="preserve">
    <value>Node description Item</value>
  </data>
  <data name="List_NewsCatalog_Title" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="List_NodeDescriptionCatalog_Title" xml:space="preserve">
    <value>Node descriptions</value>
  </data>
  <data name="List_StaticContentCatalog_Title" xml:space="preserve">
    <value>Static content</value>
  </data>
</root>